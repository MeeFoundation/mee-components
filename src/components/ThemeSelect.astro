---
import Icon from "./Icon.astro";
---

<>
  <button
    class="flex h-[30px] w-[30px] items-center justify-center"
    id="theme-select"
  >
    <Icon
      id="icon-sun"
      className="hidden text-yellow-strong"
      size="xs"
      name="sun-fill"
    />
    <Icon
      id="icon-moon"
      className="hidden text-purple-600"
      size="xs"
      name="moon-fill"
    />
  </button>
  <div id="iframe-container" class="absolute h-0 w-0 border-none"></div>
</>

<script>
  type Theme = "dark" | "light";
  const storageKey = "theme";
  const iframeContainer = document.getElementById("iframe-container");
  const version = new Date().valueOf();
  const iframe = document.createElement("iframe");
  iframe.setAttribute(
    "src",
    "https://mee.foundation/storage/index.html?ver=" + version
  );
  iframe.style.width = "0px";
  iframe.style.height = "0px";
  if (iframeContainer) {
    iframeContainer.appendChild(iframe);
  }

  interface StorageMessage {
    method: "getTheme" | "setTheme";
    theme?: Theme;
  }
  const systemValue = window.matchMedia("(prefers-color-scheme: dark)").matches
    ? "dark"
    : "light";

  let theme: Theme = (localStorage.getItem(storageKey) as Theme) || systemValue;

  const buttons = document.querySelectorAll("#theme-select");
  const iconsSun = document.querySelectorAll("#icon-sun");
  const iconsMoon = document.querySelectorAll("#icon-moon");

  const setTheme = (newTheme: Theme, withoutSave = false) => {
    localStorage.setItem(storageKey, newTheme);
    if (!withoutSave) {
      iframe.contentWindow?.postMessage(
        { method: "setTheme", theme: newTheme },
        "https://mee.foundation"
      );
    }

    document.documentElement.dataset.theme = newTheme;
    theme = newTheme;

    if (newTheme === "dark") {
      iconsSun.forEach((icon) => icon.classList.add("hidden"));
      iconsMoon.forEach((icon) => icon.classList.remove("hidden"));
      document.documentElement.classList.add("dark");
    } else {
      iconsSun.forEach((icon) => icon.classList.remove("hidden"));
      iconsMoon.forEach((icon) => icon.classList.add("hidden"));
      document.documentElement.classList.remove("dark");
    }
  };

  window.addEventListener(
    "message",
    (event) => {
      const message: StorageMessage = event.data;

      if (message.method === "getTheme") {
        if (message.theme) {
          setTheme(message.theme);
          localStorage.setItem(storageKey, message.theme);
        }
      }
    },
    false
  );

  if (iframe) {
    iframe.onload = () => {
      iframe.contentWindow?.postMessage(
        { method: "getTheme" },
        "https://mee.foundation"
      );
    };
  }

  setTheme(theme, true);

  buttons.forEach((x) =>
    x.addEventListener("click", () => {
      theme = theme === "dark" ? "light" : "dark";
      setTheme(theme);
    })
  );
</script>
