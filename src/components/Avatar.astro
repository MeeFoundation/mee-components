---
interface Props {
  isRounded?: boolean;
  className?: string;
  size?: "xs" | "sm" | "md" | "base" | "lg" | "xl";
  isActive?: boolean;
  count?: number;
  initials?: string;
  iconUrl?: string;
  id?: string;
}

const {
  isRounded = true,
  size = "base",
  isActive = false,
  className,
  count,
  initials,
  iconUrl,
  id,
} = Astro.props;

const sizes = {
  xs: "size-4",
  sm: "size-6",
  md: "size-8",
  base: "size-10",
  lg: "size-12",
  xl: "size-16",
};

const roundedSize = {
  xs: "rounded-sm",
  sm: "rounded-sm",
  md: "rounded",
  base: "rounded-lg",
  lg: "rounded-lg",
  xl: "rounded-lg",
};

const isActiveMarkSize = {
  xs: "size-1",
  sm: "size-2",
  md: "size-2",
  base: "size-3",
  lg: "size-3",
  xl: "size-4",
};

const fontSizeCountText = {
  xs: "text-xxs",
  sm: "text-xxs",
  md: "text-xxs",
  base: "text-xxs",
  lg: "text-xxs",
  xl: "text-xs",
};

const topRoundedBadgePosition = {
  xs: "-top-0.5 -right-0.5",
  sm: "-top-2.5 -right-2.5",
  md: "-top-2 -right-1.5",
  base: "-top-1 -right-1",
  lg: "top-px -right-1",
  xl: "top-px -right-1",
};

const topBadgePosition = {
  xs: "-top-1 -right-1",
  sm: "-top-2.5 -right-2.5",
  md: "-top-2 -right-1.5",
  base: "-top-1.5 -right-1",
  lg: "-top-1.5 -right-1",
  xl: "-top-1.5 -right-1",
};

const bottomBadgePosition = {
  xs: "-bottom-px -right-px",
  sm: "-bottom-0.5 -right-0.5",
  md: "-bottom-0.5 -right-0.5",
  base: "-bottom-0.5 -right-1",
  lg: "-bottom-1 -right-1",
  xl: "-bottom-1 -right-1",
};

const initialsFontSize = {
  xs: "text-xs",
  sm: "text-sm",
  md: "text-md",
  base: "text-base",
  lg: "text-lg",
  xl: "text-xl",
};

const defaultAvatarSize = {
  xs: "text-xs",
  sm: "text-base",
  md: "text-lg",
  base: "text-xl",
  lg: "text-2xl",
  xl: "text-3xl",
};
---

<div class:list={["relative cursor-pointer", sizes[size], className]} id={id}>
  <div
    class:list={[
      sizes[size],
      isRounded ? "rounded-full" : roundedSize[size],
      "flex items-center justify-center overflow-hidden bg-brand-100",
    ]}
  >
    <img
      class:list={["avatar-image", !iconUrl && "hidden"]}
      src={iconUrl}
      alt="Avatar"
    />
    <span
      class:list={[
        "avatar-initials font-bold text-brand-500",
        initialsFontSize[size],
        (!initials || iconUrl) && "hidden",
      ]}
      data-size={size}
    >
      {initials && (size === "xs" || size === "sm" ? initials[0] : initials)}
    </span>
    <i
      class:list={[
        "bi bi-person avatar-default text-brand-500",
        defaultAvatarSize[size],
        (initials || iconUrl) && "hidden",
      ]}></i>
  </div>

  <div
    class:list={[
      "avatar-count absolute flex items-center justify-center rounded-full bg-error-700",
      !count && "hidden",
      isRounded ? topRoundedBadgePosition[size] : topBadgePosition[size],
    ]}
  >
    {
      size !== "xs" ? (
        <span
          class:list={[
            "px-1.5 py-0.5 text-xs font-semibold text-white",
            fontSizeCountText[size],
          ]}
        >
          {count && (count < 10 ? count : "9+")}
        </span>
      ) : (
        <span class="size-2" />
      )
    }
  </div>
  <div
    class:list={[
      "is-active absolute rounded-full bg-success-700",
      isActiveMarkSize[size],
      !isActive && "hidden",
      isRounded ? "bottom-0 right-0" : bottomBadgePosition[size],
    ]}
  >
  </div>
</div>
