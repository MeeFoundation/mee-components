---
interface Props {
  title?: string;
  withCloseIcon?: boolean;
  id: string;
  width?: string;
  enableOutsideClick?: boolean;
  withFooter?: boolean;
  headerClassName?: string;
  contentClassName?: string;
  footerClassName?: string;
}
const {
  id,
  title,
  withCloseIcon,
  width = "500",
  enableOutsideClick,
  withFooter,
  headerClassName,
  contentClassName,
  footerClassName,
} = Astro.props;
---

<dialog
  data-width={width}
  data-enableoutsideclick={String(enableOutsideClick)}
  id={id}
  class="shadow-modal rounded-xl"
>
  <div class="modal-inner">
    <div class="modal-content text-grey-800">
      <div
        class=""
        class:list={[
          "flex w-full items-center justify-between border-b border-grey-200 p-4",
          headerClassName,
        ]}
      >
        <h3 class="text-xl font-medium">{title}</h3>
        {
          withCloseIcon && (
            <i class="close-btn bi bi-x text-3xl font-thin hover:cursor-pointer" />
          )
        }
      </div>
      <div class="flex flex-col p-4 pb-7">
        <div class:list={["rounded-md p-4 leading-6", contentClassName]}>
          <slot name="content" />
        </div>
      </div>
      {
        withFooter && (
          <div
            class:list={[
              "flex w-full items-center justify-between border-t border-grey-200 bg-grey-50 p-4",
              footerClassName,
            ]}
          >
            <slot name="footer" />
          </div>
        )
      }
    </div>
  </div>

  <style>
    dialog::backdrop {
      background-color: var(--color-modal-overlay);
    }
  </style>

  <script>
    const dialogContainers = document.querySelectorAll("dialog");

    dialogContainers.forEach((dialog) => {
      if (dialog) {
        const enableOutsideClick = dialog.dataset.enableoutsideclick === "true";
        const width = dialog.dataset.width;

        dialog.style.width = `${width}px`;

        const closeButton = dialog.querySelector(".close-btn");

        closeButton &&
          closeButton.addEventListener("click", () => {
            dialog.close();
          });

        enableOutsideClick &&
          document.addEventListener("click", (event) => {
            if (event.target === dialog) {
              dialog.close();
            }
          });
      }
    });
  </script>
</dialog>
